/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.CardLayout;
import java.awt.Color;
import java.sql.Statement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.JTableHeader;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author shenugayana
 */
public class Home extends javax.swing.JFrame {
    String driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver";
    String url = "jdbc:sqlserver://localhost:1433;databaseName=arulWing";
    String username = "sa";
    String password = "Ashok12111997#";
    /**
     * Creates new form Home
     */
    public Home() {
        initComponents();
        ImageIcon img = new ImageIcon("src/Images/Logo.png");
        
        this.setLocationRelativeTo(null);
        this.setIconImage(img.getImage());
        
        ButtonVisibility();
        StyleTable();
        LoadDemandDetails();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SplitPane = new javax.swing.JSplitPane();
        PaneMenu = new javax.swing.JPanel();
        Ddemand = new javax.swing.JLabel();
        Ddonor = new javax.swing.JLabel();
        Dpatient = new javax.swing.JLabel();
        Dabout = new javax.swing.JLabel();
        Ademand = new javax.swing.JLabel();
        Adonor = new javax.swing.JLabel();
        Apatient = new javax.swing.JLabel();
        Aabout = new javax.swing.JLabel();
        BgMenu = new javax.swing.JLabel();
        PaneHome = new javax.swing.JPanel();
        PanelDemand = new javax.swing.JPanel();
        AplusRequired = new javax.swing.JLabel();
        AplusAvailable = new javax.swing.JLabel();
        AminusRequired = new javax.swing.JLabel();
        AminusAvailable = new javax.swing.JLabel();
        ABplusRequired = new javax.swing.JLabel();
        ABplusAvailable = new javax.swing.JLabel();
        ABminusRequired = new javax.swing.JLabel();
        ABminusAvailable = new javax.swing.JLabel();
        BplusRequired = new javax.swing.JLabel();
        BplusAvailable = new javax.swing.JLabel();
        BminusRequired = new javax.swing.JLabel();
        BminusAvailable = new javax.swing.JLabel();
        OplusRequired = new javax.swing.JLabel();
        OplusAvailable = new javax.swing.JLabel();
        OminusAvailable = new javax.swing.JLabel();
        OminusRequired = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        BgDemand = new javax.swing.JLabel();
        PanelDonor = new javax.swing.JPanel();
        txtDonorID = new javax.swing.JTextField();
        BgDonorID = new javax.swing.JLabel();
        BtnDeleteDonor = new javax.swing.JLabel();
        BtnEditDonor = new javax.swing.JLabel();
        BtnCreateDonor = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableDonor = new javax.swing.JTable();
        PanelPatient = new javax.swing.JPanel();
        txtPatientID = new javax.swing.JTextField();
        BgPatientID = new javax.swing.JLabel();
        BtnDeletePatient = new javax.swing.JLabel();
        BtnEditPatient = new javax.swing.JLabel();
        BtnCreatePatient = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TablePatient = new javax.swing.JTable();
        PanelAbout = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        NewDonorPanel = new javax.swing.JPanel();
        txtDonorName = new javax.swing.JTextField();
        txtDonorBloodGroup = new javax.swing.JTextField();
        txtDonorAge = new javax.swing.JTextField();
        txtDonorMobile = new javax.swing.JTextField();
        txtDonorWeight = new javax.swing.JTextField();
        txtDonorAddress = new javax.swing.JTextField();
        BtnCreateDonorCancel = new javax.swing.JLabel();
        BtnCreateDonorR = new javax.swing.JLabel();
        BgNewDonor = new javax.swing.JLabel();
        EditDonorPanel = new javax.swing.JPanel();
        txtDonorName1 = new javax.swing.JTextField();
        txtDonorBloodGroup1 = new javax.swing.JTextField();
        txtDonorAge1 = new javax.swing.JTextField();
        txtDonorMobile1 = new javax.swing.JTextField();
        txtDonorWeight1 = new javax.swing.JTextField();
        txtDonorAddress1 = new javax.swing.JTextField();
        BtnEditDonorCancel = new javax.swing.JLabel();
        BtnEditDonorR = new javax.swing.JLabel();
        BgEditDonor = new javax.swing.JLabel();
        NewPatientPanel = new javax.swing.JPanel();
        txtPatientName = new javax.swing.JTextField();
        txtPatientBloodGroup = new javax.swing.JTextField();
        txtPatientAge = new javax.swing.JTextField();
        txtPatientMobile = new javax.swing.JTextField();
        txtPatientWeight = new javax.swing.JTextField();
        txtPatientAddress = new javax.swing.JTextField();
        BtnCreatePatientCancel = new javax.swing.JLabel();
        BtnCreatePatientR = new javax.swing.JLabel();
        BgNewPatient = new javax.swing.JLabel();
        EditPatientPanel = new javax.swing.JPanel();
        txtPatientName1 = new javax.swing.JTextField();
        txtPatientBloodGroup1 = new javax.swing.JTextField();
        txtPatientAge1 = new javax.swing.JTextField();
        txtPatientMobile1 = new javax.swing.JTextField();
        txtPatientWeight1 = new javax.swing.JTextField();
        txtPatientAddress1 = new javax.swing.JTextField();
        BtnEditPatientCancel = new javax.swing.JLabel();
        BtnEditPatientR = new javax.swing.JLabel();
        BgEditPatient = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ArulWing");
        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(1280, 720));
        setMinimumSize(new java.awt.Dimension(1280, 720));
        setName("HomeFrame"); // NOI18N
        setResizable(false);
        getContentPane().setLayout(null);

        SplitPane.setBackground(new java.awt.Color(255, 255, 255));
        SplitPane.setBorder(null);
        SplitPane.setDividerLocation(85);
        SplitPane.setDividerSize(0);

        PaneMenu.setMaximumSize(new java.awt.Dimension(85, 720));
        PaneMenu.setMinimumSize(new java.awt.Dimension(85, 720));
        PaneMenu.setPreferredSize(new java.awt.Dimension(85, 720));
        PaneMenu.setLayout(null);

        Ddemand.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/DctDemand.png"))); // NOI18N
        Ddemand.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RedirectDemand(evt);
            }
        });
        PaneMenu.add(Ddemand);
        Ddemand.setBounds(0, 110, 85, 109);

        Ddonor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/DctDonor.png"))); // NOI18N
        Ddonor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RedirectDonor(evt);
            }
        });
        PaneMenu.add(Ddonor);
        Ddonor.setBounds(0, 220, 85, 109);

        Dpatient.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/DctPatient.png"))); // NOI18N
        Dpatient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RedirectPatient(evt);
            }
        });
        PaneMenu.add(Dpatient);
        Dpatient.setBounds(0, 330, 85, 109);

        Dabout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/DctAbout.png"))); // NOI18N
        Dabout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RedirectAbout(evt);
            }
        });
        PaneMenu.add(Dabout);
        Dabout.setBounds(0, 440, 85, 109);

        Ademand.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ActDemand.png"))); // NOI18N
        PaneMenu.add(Ademand);
        Ademand.setBounds(0, 110, 85, 109);

        Adonor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ActDonor.png"))); // NOI18N
        PaneMenu.add(Adonor);
        Adonor.setBounds(0, 220, 85, 109);

        Apatient.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ActPatient.png"))); // NOI18N
        PaneMenu.add(Apatient);
        Apatient.setBounds(0, 330, 85, 109);

        Aabout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ActAbout.png"))); // NOI18N
        PaneMenu.add(Aabout);
        Aabout.setBounds(0, 440, 85, 109);

        BgMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/BgMenu.png"))); // NOI18N
        PaneMenu.add(BgMenu);
        BgMenu.setBounds(0, 0, 85, 720);

        SplitPane.setLeftComponent(PaneMenu);

        PaneHome.setBackground(new java.awt.Color(255, 255, 255));
        PaneHome.setMaximumSize(new java.awt.Dimension(1195, 720));
        PaneHome.setMinimumSize(new java.awt.Dimension(1195, 720));
        PaneHome.setPreferredSize(new java.awt.Dimension(1195, 720));
        PaneHome.setLayout(new java.awt.CardLayout());

        PanelDemand.setBackground(new java.awt.Color(255, 255, 255));
        PanelDemand.setLayout(null);

        AplusRequired.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        AplusRequired.setForeground(new java.awt.Color(255, 255, 255));
        AplusRequired.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        AplusRequired.setText("00");
        PanelDemand.add(AplusRequired);
        AplusRequired.setBounds(240, 430, 60, 29);

        AplusAvailable.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        AplusAvailable.setForeground(new java.awt.Color(255, 255, 255));
        AplusAvailable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        AplusAvailable.setText("00");
        PanelDemand.add(AplusAvailable);
        AplusAvailable.setBounds(240, 400, 60, 29);

        AminusRequired.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        AminusRequired.setForeground(new java.awt.Color(255, 102, 102));
        AminusRequired.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        AminusRequired.setText("00");
        PanelDemand.add(AminusRequired);
        AminusRequired.setBounds(490, 430, 60, 29);

        AminusAvailable.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        AminusAvailable.setForeground(new java.awt.Color(255, 102, 102));
        AminusAvailable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        AminusAvailable.setText("00");
        PanelDemand.add(AminusAvailable);
        AminusAvailable.setBounds(490, 400, 60, 29);

        ABplusRequired.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        ABplusRequired.setForeground(new java.awt.Color(255, 255, 255));
        ABplusRequired.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ABplusRequired.setText("00");
        PanelDemand.add(ABplusRequired);
        ABplusRequired.setBounds(750, 430, 60, 29);

        ABplusAvailable.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        ABplusAvailable.setForeground(new java.awt.Color(255, 255, 255));
        ABplusAvailable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ABplusAvailable.setText("00");
        PanelDemand.add(ABplusAvailable);
        ABplusAvailable.setBounds(750, 400, 60, 29);

        ABminusRequired.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        ABminusRequired.setForeground(new java.awt.Color(255, 102, 102));
        ABminusRequired.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ABminusRequired.setText("00");
        PanelDemand.add(ABminusRequired);
        ABminusRequired.setBounds(1000, 430, 60, 29);

        ABminusAvailable.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        ABminusAvailable.setForeground(new java.awt.Color(255, 102, 102));
        ABminusAvailable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ABminusAvailable.setText("00");
        PanelDemand.add(ABminusAvailable);
        ABminusAvailable.setBounds(1000, 400, 60, 29);

        BplusRequired.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        BplusRequired.setForeground(new java.awt.Color(255, 102, 102));
        BplusRequired.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        BplusRequired.setText("00");
        PanelDemand.add(BplusRequired);
        BplusRequired.setBounds(240, 600, 60, 29);

        BplusAvailable.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        BplusAvailable.setForeground(new java.awt.Color(255, 102, 102));
        BplusAvailable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        BplusAvailable.setText("00");
        PanelDemand.add(BplusAvailable);
        BplusAvailable.setBounds(240, 570, 60, 29);

        BminusRequired.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        BminusRequired.setForeground(new java.awt.Color(255, 255, 255));
        BminusRequired.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        BminusRequired.setText("00");
        PanelDemand.add(BminusRequired);
        BminusRequired.setBounds(500, 600, 60, 29);

        BminusAvailable.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        BminusAvailable.setForeground(new java.awt.Color(255, 255, 255));
        BminusAvailable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        BminusAvailable.setText("00");
        PanelDemand.add(BminusAvailable);
        BminusAvailable.setBounds(500, 570, 60, 29);

        OplusRequired.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        OplusRequired.setForeground(new java.awt.Color(255, 102, 102));
        OplusRequired.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        OplusRequired.setText("00");
        PanelDemand.add(OplusRequired);
        OplusRequired.setBounds(750, 600, 60, 29);

        OplusAvailable.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        OplusAvailable.setForeground(new java.awt.Color(255, 102, 102));
        OplusAvailable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        OplusAvailable.setText("00");
        PanelDemand.add(OplusAvailable);
        OplusAvailable.setBounds(750, 570, 60, 29);

        OminusAvailable.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        OminusAvailable.setForeground(new java.awt.Color(255, 255, 255));
        OminusAvailable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        OminusAvailable.setText("00");
        PanelDemand.add(OminusAvailable);
        OminusAvailable.setBounds(1000, 570, 60, 29);

        OminusRequired.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        OminusRequired.setForeground(new java.awt.Color(255, 255, 255));
        OminusRequired.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        OminusRequired.setText("00");
        PanelDemand.add(OminusRequired);
        OminusRequired.setBounds(1000, 600, 60, 29);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Required");
        PanelDemand.add(jLabel1);
        jLabel1.setBounds(120, 430, 110, 29);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Available");
        PanelDemand.add(jLabel2);
        jLabel2.setBounds(120, 400, 110, 29);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 102, 102));
        jLabel5.setText("Required");
        PanelDemand.add(jLabel5);
        jLabel5.setBounds(370, 430, 110, 29);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 102, 102));
        jLabel6.setText("Available");
        PanelDemand.add(jLabel6);
        jLabel6.setBounds(370, 400, 110, 29);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Required");
        PanelDemand.add(jLabel9);
        jLabel9.setBounds(630, 430, 110, 29);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Available");
        PanelDemand.add(jLabel10);
        jLabel10.setBounds(630, 400, 110, 29);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 102, 102));
        jLabel13.setText("Required");
        PanelDemand.add(jLabel13);
        jLabel13.setBounds(880, 430, 110, 29);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 102, 102));
        jLabel14.setText("Available");
        PanelDemand.add(jLabel14);
        jLabel14.setBounds(880, 400, 110, 29);

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 102, 102));
        jLabel17.setText("Required");
        PanelDemand.add(jLabel17);
        jLabel17.setBounds(120, 600, 110, 29);

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 102, 102));
        jLabel18.setText("Available");
        PanelDemand.add(jLabel18);
        jLabel18.setBounds(120, 570, 110, 29);

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Required");
        PanelDemand.add(jLabel21);
        jLabel21.setBounds(380, 600, 110, 29);

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Available");
        PanelDemand.add(jLabel22);
        jLabel22.setBounds(380, 570, 110, 29);

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 102, 102));
        jLabel25.setText("Required");
        PanelDemand.add(jLabel25);
        jLabel25.setBounds(630, 600, 110, 29);

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 102, 102));
        jLabel26.setText("Available");
        PanelDemand.add(jLabel26);
        jLabel26.setBounds(630, 570, 110, 29);

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setText("Available");
        PanelDemand.add(jLabel29);
        jLabel29.setBounds(880, 570, 110, 29);

        jLabel31.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setText("Required");
        PanelDemand.add(jLabel31);
        jLabel31.setBounds(880, 600, 110, 29);

        BgDemand.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/BgDemand.png"))); // NOI18N
        PanelDemand.add(BgDemand);
        BgDemand.setBounds(0, 0, 1200, 720);

        PaneHome.add(PanelDemand, "card2");

        PanelDonor.setBackground(new java.awt.Color(255, 255, 255));
        PanelDonor.setLayout(null);

        txtDonorID.setFont(new java.awt.Font("Leelawadee UI Semilight", 0, 24)); // NOI18N
        txtDonorID.setForeground(new java.awt.Color(153, 153, 153));
        txtDonorID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDonorID.setBorder(null);
        PanelDonor.add(txtDonorID);
        txtDonorID.setBounds(450, 40, 70, 40);

        BgDonorID.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/idtxtbox.png"))); // NOI18N
        PanelDonor.add(BgDonorID);
        BgDonorID.setBounds(400, 50, 140, 50);

        BtnDeleteDonor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/BtnDelete.png"))); // NOI18N
        BtnDeleteDonor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DeleteDonor(evt);
            }
        });
        PanelDonor.add(BtnDeleteDonor);
        BtnDeleteDonor.setBounds(570, 50, 180, 50);

        BtnEditDonor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/BtnModify.png"))); // NOI18N
        BtnEditDonor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EditDonor(evt);
            }
        });
        PanelDonor.add(BtnEditDonor);
        BtnEditDonor.setBounds(770, 50, 180, 50);

        BtnCreateDonor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/BtnAdd.png"))); // NOI18N
        BtnCreateDonor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NewDonor(evt);
            }
        });
        PanelDonor.add(BtnCreateDonor);
        BtnCreateDonor.setBounds(970, 50, 180, 50);

        jScrollPane1.setBorder(null);

        TableDonor.setAutoCreateRowSorter(true);
        TableDonor.setFont(new java.awt.Font("Leelawadee UI Semilight", 0, 18)); // NOI18N
        TableDonor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableDonor.setFocusable(false);
        TableDonor.setGridColor(new java.awt.Color(255, 69, 75));
        jScrollPane1.setViewportView(TableDonor);

        PanelDonor.add(jScrollPane1);
        jScrollPane1.setBounds(80, 180, 1070, 430);

        PaneHome.add(PanelDonor, "card3");

        PanelPatient.setBackground(new java.awt.Color(255, 255, 255));
        PanelPatient.setLayout(null);

        txtPatientID.setFont(new java.awt.Font("Leelawadee UI Semilight", 0, 24)); // NOI18N
        txtPatientID.setForeground(new java.awt.Color(153, 153, 153));
        txtPatientID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPatientID.setBorder(null);
        PanelPatient.add(txtPatientID);
        txtPatientID.setBounds(450, 40, 70, 40);

        BgPatientID.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/idtxtbox.png"))); // NOI18N
        PanelPatient.add(BgPatientID);
        BgPatientID.setBounds(400, 50, 140, 50);

        BtnDeletePatient.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/BtnDelete.png"))); // NOI18N
        BtnDeletePatient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DeletePatient(evt);
            }
        });
        PanelPatient.add(BtnDeletePatient);
        BtnDeletePatient.setBounds(570, 50, 180, 50);

        BtnEditPatient.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/BtnModify.png"))); // NOI18N
        BtnEditPatient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EditPatient(evt);
            }
        });
        PanelPatient.add(BtnEditPatient);
        BtnEditPatient.setBounds(770, 50, 180, 50);

        BtnCreatePatient.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/BtnAdd.png"))); // NOI18N
        BtnCreatePatient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NewPatient(evt);
            }
        });
        PanelPatient.add(BtnCreatePatient);
        BtnCreatePatient.setBounds(970, 50, 180, 50);

        jScrollPane2.setBorder(null);

        TablePatient.setFont(new java.awt.Font("Leelawadee UI Semilight", 0, 18)); // NOI18N
        TablePatient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TablePatient.setGridColor(new java.awt.Color(255, 69, 75));
        jScrollPane2.setViewportView(TablePatient);

        PanelPatient.add(jScrollPane2);
        jScrollPane2.setBounds(80, 180, 1070, 430);

        PaneHome.add(PanelPatient, "card4");

        PanelAbout.setBackground(new java.awt.Color(255, 255, 255));
        PanelAbout.setLayout(null);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/BgAboutt.png"))); // NOI18N
        PanelAbout.add(jLabel3);
        jLabel3.setBounds(0, 0, 1200, 720);

        PaneHome.add(PanelAbout, "card5");

        NewDonorPanel.setLayout(null);

        txtDonorName.setBackground(new java.awt.Color(255, 247, 245));
        txtDonorName.setFont(new java.awt.Font("Leelawadee UI Semilight", 0, 24)); // NOI18N
        txtDonorName.setForeground(new java.awt.Color(153, 153, 153));
        txtDonorName.setBorder(null);
        NewDonorPanel.add(txtDonorName);
        txtDonorName.setBounds(530, 180, 290, 30);

        txtDonorBloodGroup.setBackground(new java.awt.Color(255, 247, 245));
        txtDonorBloodGroup.setFont(new java.awt.Font("Leelawadee UI Semilight", 0, 24)); // NOI18N
        txtDonorBloodGroup.setForeground(new java.awt.Color(153, 153, 153));
        txtDonorBloodGroup.setBorder(null);
        NewDonorPanel.add(txtDonorBloodGroup);
        txtDonorBloodGroup.setBounds(880, 180, 290, 30);

        txtDonorAge.setBackground(new java.awt.Color(255, 247, 245));
        txtDonorAge.setFont(new java.awt.Font("Leelawadee UI Semilight", 0, 24)); // NOI18N
        txtDonorAge.setForeground(new java.awt.Color(153, 153, 153));
        txtDonorAge.setBorder(null);
        NewDonorPanel.add(txtDonorAge);
        txtDonorAge.setBounds(530, 300, 290, 30);

        txtDonorMobile.setBackground(new java.awt.Color(255, 247, 245));
        txtDonorMobile.setFont(new java.awt.Font("Leelawadee UI Semilight", 0, 24)); // NOI18N
        txtDonorMobile.setForeground(new java.awt.Color(153, 153, 153));
        txtDonorMobile.setBorder(null);
        NewDonorPanel.add(txtDonorMobile);
        txtDonorMobile.setBounds(880, 300, 290, 30);

        txtDonorWeight.setBackground(new java.awt.Color(255, 247, 245));
        txtDonorWeight.setFont(new java.awt.Font("Leelawadee UI Semilight", 0, 24)); // NOI18N
        txtDonorWeight.setForeground(new java.awt.Color(153, 153, 153));
        txtDonorWeight.setBorder(null);
        NewDonorPanel.add(txtDonorWeight);
        txtDonorWeight.setBounds(530, 420, 290, 30);

        txtDonorAddress.setBackground(new java.awt.Color(255, 247, 245));
        txtDonorAddress.setFont(new java.awt.Font("Leelawadee UI Semilight", 0, 24)); // NOI18N
        txtDonorAddress.setForeground(new java.awt.Color(153, 153, 153));
        txtDonorAddress.setBorder(null);
        NewDonorPanel.add(txtDonorAddress);
        txtDonorAddress.setBounds(880, 420, 290, 30);

        BtnCreateDonorCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/BtnCancel.png"))); // NOI18N
        BtnCreateDonorCancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RedirectDonor(evt);
            }
        });
        NewDonorPanel.add(BtnCreateDonorCancel);
        BtnCreateDonorCancel.setBounds(570, 530, 240, 59);

        BtnCreateDonorR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/BtnCreatePink.png"))); // NOI18N
        BtnCreateDonorR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddDonor(evt);
            }
        });
        NewDonorPanel.add(BtnCreateDonorR);
        BtnCreateDonorR.setBounds(830, 530, 240, 59);

        BgNewDonor.setBackground(new java.awt.Color(255, 247, 245));
        BgNewDonor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/BgDonor.png"))); // NOI18N
        BgNewDonor.setOpaque(true);
        NewDonorPanel.add(BgNewDonor);
        BgNewDonor.setBounds(0, 0, 1195, 720);

        PaneHome.add(NewDonorPanel, "card6");

        EditDonorPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EditDonor(evt);
            }
        });
        EditDonorPanel.setLayout(null);

        txtDonorName1.setBackground(new java.awt.Color(255, 247, 245));
        txtDonorName1.setFont(new java.awt.Font("Leelawadee UI Semilight", 0, 24)); // NOI18N
        txtDonorName1.setForeground(new java.awt.Color(153, 153, 153));
        txtDonorName1.setBorder(null);
        EditDonorPanel.add(txtDonorName1);
        txtDonorName1.setBounds(530, 180, 290, 30);

        txtDonorBloodGroup1.setBackground(new java.awt.Color(255, 247, 245));
        txtDonorBloodGroup1.setFont(new java.awt.Font("Leelawadee UI Semilight", 0, 24)); // NOI18N
        txtDonorBloodGroup1.setForeground(new java.awt.Color(153, 153, 153));
        txtDonorBloodGroup1.setBorder(null);
        EditDonorPanel.add(txtDonorBloodGroup1);
        txtDonorBloodGroup1.setBounds(880, 180, 290, 30);

        txtDonorAge1.setBackground(new java.awt.Color(255, 247, 245));
        txtDonorAge1.setFont(new java.awt.Font("Leelawadee UI Semilight", 0, 24)); // NOI18N
        txtDonorAge1.setForeground(new java.awt.Color(153, 153, 153));
        txtDonorAge1.setBorder(null);
        EditDonorPanel.add(txtDonorAge1);
        txtDonorAge1.setBounds(530, 300, 290, 30);

        txtDonorMobile1.setBackground(new java.awt.Color(255, 247, 245));
        txtDonorMobile1.setFont(new java.awt.Font("Leelawadee UI Semilight", 0, 24)); // NOI18N
        txtDonorMobile1.setForeground(new java.awt.Color(153, 153, 153));
        txtDonorMobile1.setBorder(null);
        EditDonorPanel.add(txtDonorMobile1);
        txtDonorMobile1.setBounds(880, 300, 290, 30);

        txtDonorWeight1.setBackground(new java.awt.Color(255, 247, 245));
        txtDonorWeight1.setFont(new java.awt.Font("Leelawadee UI Semilight", 0, 24)); // NOI18N
        txtDonorWeight1.setForeground(new java.awt.Color(153, 153, 153));
        txtDonorWeight1.setBorder(null);
        EditDonorPanel.add(txtDonorWeight1);
        txtDonorWeight1.setBounds(530, 420, 290, 30);

        txtDonorAddress1.setBackground(new java.awt.Color(255, 247, 245));
        txtDonorAddress1.setFont(new java.awt.Font("Leelawadee UI Semilight", 0, 24)); // NOI18N
        txtDonorAddress1.setForeground(new java.awt.Color(153, 153, 153));
        txtDonorAddress1.setBorder(null);
        EditDonorPanel.add(txtDonorAddress1);
        txtDonorAddress1.setBounds(880, 420, 290, 30);

        BtnEditDonorCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/BtnCancel.png"))); // NOI18N
        BtnEditDonorCancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RedirectDonor(evt);
            }
        });
        EditDonorPanel.add(BtnEditDonorCancel);
        BtnEditDonorCancel.setBounds(570, 530, 240, 59);

        BtnEditDonorR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/BtnUpdatePink.png"))); // NOI18N
        BtnEditDonorR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UpdateDonor(evt);
            }
        });
        EditDonorPanel.add(BtnEditDonorR);
        BtnEditDonorR.setBounds(830, 530, 240, 59);

        BgEditDonor.setBackground(new java.awt.Color(255, 247, 245));
        BgEditDonor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/BgDonor.png"))); // NOI18N
        BgEditDonor.setOpaque(true);
        EditDonorPanel.add(BgEditDonor);
        BgEditDonor.setBounds(0, 0, 1195, 720);

        PaneHome.add(EditDonorPanel, "card7");

        NewPatientPanel.setLayout(null);

        txtPatientName.setFont(new java.awt.Font("Leelawadee UI Semilight", 0, 24)); // NOI18N
        txtPatientName.setForeground(new java.awt.Color(153, 153, 153));
        txtPatientName.setBorder(null);
        NewPatientPanel.add(txtPatientName);
        txtPatientName.setBounds(550, 190, 260, 30);

        txtPatientBloodGroup.setFont(new java.awt.Font("Leelawadee UI Semilight", 0, 24)); // NOI18N
        txtPatientBloodGroup.setForeground(new java.awt.Color(153, 153, 153));
        txtPatientBloodGroup.setBorder(null);
        NewPatientPanel.add(txtPatientBloodGroup);
        txtPatientBloodGroup.setBounds(880, 190, 260, 30);

        txtPatientAge.setFont(new java.awt.Font("Leelawadee UI Semilight", 0, 24)); // NOI18N
        txtPatientAge.setForeground(new java.awt.Color(153, 153, 153));
        txtPatientAge.setBorder(null);
        NewPatientPanel.add(txtPatientAge);
        txtPatientAge.setBounds(550, 300, 260, 30);

        txtPatientMobile.setFont(new java.awt.Font("Leelawadee UI Semilight", 0, 24)); // NOI18N
        txtPatientMobile.setForeground(new java.awt.Color(153, 153, 153));
        txtPatientMobile.setBorder(null);
        NewPatientPanel.add(txtPatientMobile);
        txtPatientMobile.setBounds(880, 300, 260, 30);

        txtPatientWeight.setFont(new java.awt.Font("Leelawadee UI Semilight", 0, 24)); // NOI18N
        txtPatientWeight.setForeground(new java.awt.Color(153, 153, 153));
        txtPatientWeight.setBorder(null);
        NewPatientPanel.add(txtPatientWeight);
        txtPatientWeight.setBounds(550, 420, 260, 30);

        txtPatientAddress.setFont(new java.awt.Font("Leelawadee UI Semilight", 0, 24)); // NOI18N
        txtPatientAddress.setForeground(new java.awt.Color(153, 153, 153));
        txtPatientAddress.setBorder(null);
        NewPatientPanel.add(txtPatientAddress);
        txtPatientAddress.setBounds(880, 420, 260, 30);

        BtnCreatePatientCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/BtnCancel.png"))); // NOI18N
        BtnCreatePatientCancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RedirectPatient(evt);
            }
        });
        NewPatientPanel.add(BtnCreatePatientCancel);
        BtnCreatePatientCancel.setBounds(570, 530, 240, 59);

        BtnCreatePatientR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/BtnCreateBlue.png"))); // NOI18N
        BtnCreatePatientR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddPatient(evt);
            }
        });
        NewPatientPanel.add(BtnCreatePatientR);
        BtnCreatePatientR.setBounds(830, 530, 240, 59);

        BgNewPatient.setBackground(new java.awt.Color(255, 255, 255));
        BgNewPatient.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/BgPatient.png"))); // NOI18N
        BgNewPatient.setOpaque(true);
        NewPatientPanel.add(BgNewPatient);
        BgNewPatient.setBounds(0, 0, 1195, 720);

        PaneHome.add(NewPatientPanel, "card8");

        EditPatientPanel.setLayout(null);

        txtPatientName1.setFont(new java.awt.Font("Leelawadee UI Semilight", 0, 24)); // NOI18N
        txtPatientName1.setForeground(new java.awt.Color(153, 153, 153));
        txtPatientName1.setBorder(null);
        EditPatientPanel.add(txtPatientName1);
        txtPatientName1.setBounds(550, 190, 260, 30);

        txtPatientBloodGroup1.setFont(new java.awt.Font("Leelawadee UI Semilight", 0, 24)); // NOI18N
        txtPatientBloodGroup1.setForeground(new java.awt.Color(153, 153, 153));
        txtPatientBloodGroup1.setBorder(null);
        EditPatientPanel.add(txtPatientBloodGroup1);
        txtPatientBloodGroup1.setBounds(880, 190, 260, 30);

        txtPatientAge1.setFont(new java.awt.Font("Leelawadee UI Semilight", 0, 24)); // NOI18N
        txtPatientAge1.setForeground(new java.awt.Color(153, 153, 153));
        txtPatientAge1.setBorder(null);
        EditPatientPanel.add(txtPatientAge1);
        txtPatientAge1.setBounds(550, 300, 260, 30);

        txtPatientMobile1.setFont(new java.awt.Font("Leelawadee UI Semilight", 0, 24)); // NOI18N
        txtPatientMobile1.setForeground(new java.awt.Color(153, 153, 153));
        txtPatientMobile1.setBorder(null);
        EditPatientPanel.add(txtPatientMobile1);
        txtPatientMobile1.setBounds(880, 300, 260, 30);

        txtPatientWeight1.setFont(new java.awt.Font("Leelawadee UI Semilight", 0, 24)); // NOI18N
        txtPatientWeight1.setForeground(new java.awt.Color(153, 153, 153));
        txtPatientWeight1.setBorder(null);
        EditPatientPanel.add(txtPatientWeight1);
        txtPatientWeight1.setBounds(550, 420, 260, 30);

        txtPatientAddress1.setFont(new java.awt.Font("Leelawadee UI Semilight", 0, 24)); // NOI18N
        txtPatientAddress1.setForeground(new java.awt.Color(153, 153, 153));
        txtPatientAddress1.setBorder(null);
        EditPatientPanel.add(txtPatientAddress1);
        txtPatientAddress1.setBounds(880, 420, 260, 30);

        BtnEditPatientCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/BtnCancel.png"))); // NOI18N
        BtnEditPatientCancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RedirectPatient(evt);
            }
        });
        EditPatientPanel.add(BtnEditPatientCancel);
        BtnEditPatientCancel.setBounds(570, 530, 240, 59);

        BtnEditPatientR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/BtnUpdateBlue.png"))); // NOI18N
        BtnEditPatientR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UpdatePatient(evt);
            }
        });
        EditPatientPanel.add(BtnEditPatientR);
        BtnEditPatientR.setBounds(830, 530, 240, 59);

        BgEditPatient.setBackground(new java.awt.Color(255, 255, 255));
        BgEditPatient.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/BgPatient.png"))); // NOI18N
        BgEditPatient.setOpaque(true);
        EditPatientPanel.add(BgEditPatient);
        BgEditPatient.setBounds(0, 0, 1195, 720);

        PaneHome.add(EditPatientPanel, "card9");

        SplitPane.setRightComponent(PaneHome);

        getContentPane().add(SplitPane);
        SplitPane.setBounds(0, 0, 1280, 720);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void StyleTable(){
        jScrollPane1.getViewport().setBackground(Color.WHITE);
        jScrollPane2.getViewport().setBackground(Color.WHITE);
        TableDonor.setRowHeight(30);
        TablePatient.setRowHeight(30);
        
        TableDonor.setGridColor(new Color(255, 69, 75));
        TableDonor.setShowHorizontalLines(true);
        TableDonor.setShowVerticalLines(false);
        TablePatient.setGridColor(new Color(255, 69, 75));
        TablePatient.setShowHorizontalLines(true);
        TablePatient.setShowVerticalLines(false);
        
        TableDonor.setBackground(Color.white);
        TablePatient.setBackground(Color.white);
        
        TableDonor.setSelectionBackground(new Color(254, 223, 230));
        TableDonor.setSelectionForeground(Color.black);
        TablePatient.setSelectionBackground(new Color(254, 223, 230));
        TablePatient.setSelectionForeground(Color.black);
        
        DefaultTableCellRenderer head_donor = new DefaultTableCellRenderer(); 
        head_donor.setBackground(new Color(255, 153, 153));
        TableDonor.getTableHeader().setDefaultRenderer(head_donor);
        
        DefaultTableCellRenderer head_patient = new DefaultTableCellRenderer(); 
        head_patient.setBackground(new Color(255, 153, 153));
        TablePatient.getTableHeader().setDefaultRenderer(head_patient);
    }
    
    private void LoadDemandDetails(){
        try {
            Connection connection = DriverManager.getConnection(url, username, password);
            
            String sqlDonor = "select count(case when BloodGroup='A+' then 1 end), count(case when BloodGroup='A-' then 1 end), count(case when BloodGroup='B+' then 1 end), count(case when BloodGroup='B-' then 1 end), count(case when BloodGroup='AB+' then 1 end), count(case when BloodGroup='AB-' then 1 end), count(case when BloodGroup='O+' then 1 end), count(case when BloodGroup='O-' then 1 end) from Donor;";
            Statement statementDonor = connection.createStatement();
            ResultSet resultDonor = statementDonor.executeQuery(sqlDonor);            
            while (resultDonor.next()){
                AplusAvailable.setText(resultDonor.getString(1));
                AminusAvailable.setText(resultDonor.getString(2));
                BplusAvailable.setText(resultDonor.getString(3));
                BminusAvailable.setText(resultDonor.getString(4));
                ABplusAvailable.setText(resultDonor.getString(5));
                ABminusAvailable.setText(resultDonor.getString(6));
                OplusAvailable.setText(resultDonor.getString(7));
                OminusAvailable.setText(resultDonor.getString(8));
            }
            
            String sqlPatient = "select count(case when BloodGroup='A+' then 1 end), count(case when BloodGroup='A-' then 1 end), count(case when BloodGroup='B+' then 1 end), count(case when BloodGroup='B-' then 1 end), count(case when BloodGroup='AB+' then 1 end), count(case when BloodGroup='AB-' then 1 end), count(case when BloodGroup='O+' then 1 end), count(case when BloodGroup='O-' then 1 end) from Patient;";
            Statement statementPatient = connection.createStatement();
            ResultSet resultPatient = statementPatient.executeQuery(sqlPatient);            
            while (resultPatient.next()){
                AplusRequired.setText(resultPatient.getString(1));
                AminusRequired.setText(resultPatient.getString(2));
                BplusRequired.setText(resultPatient.getString(3));
                BminusRequired.setText(resultPatient.getString(4));
                ABplusRequired.setText(resultPatient.getString(5));
                ABminusRequired.setText(resultPatient.getString(6));
                OplusRequired.setText(resultPatient.getString(7));
                OminusRequired.setText(resultPatient.getString(8));
            }
        }
        
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }        
    }
    
    private void LoadDonorTable(){
        try {
            Class.forName(driver);
            Connection connection = DriverManager.getConnection(url, username, password);
            String sql = "select * from Donor";
            Statement statement = connection.createStatement();
            ResultSet result = statement.executeQuery(sql);
            TableDonor.setModel(DbUtils.resultSetToTableModel(result));
        }
        catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }
    
    private void LoadPatientTable(){
        try {
            Class.forName(driver);
            Connection connection = DriverManager.getConnection(url, username, password);
            String sql = "select * from Patient";
            Statement statement = connection.createStatement();
            ResultSet result = statement.executeQuery(sql);
            TablePatient.setModel(DbUtils.resultSetToTableModel(result));
        }
        catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }
    
    private void ButtonVisibility(){
        Ddemand.setVisible(false);
        Ddonor.setVisible(true);
        Dpatient.setVisible(true);
        Dabout.setVisible(true);
        
        Ademand.setVisible(true);
        Adonor.setVisible(false);
        Apatient.setVisible(false);
        Aabout.setVisible(false);
    }
    
    private void RedirectDemand(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RedirectDemand
        Ddemand.setVisible(false);
        Ddonor.setVisible(true);
        Dpatient.setVisible(true);
        Dabout.setVisible(true);
        
        Ademand.setVisible(true);
        Adonor.setVisible(false);
        Apatient.setVisible(false);
        Aabout.setVisible(false);
        
        LoadDemandDetails();
        CardLayout card = (CardLayout)PaneHome.getLayout();
        card.show(PaneHome, "card2");
    }//GEN-LAST:event_RedirectDemand

    private void RedirectDonor(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RedirectDonor
        Ddemand.setVisible(true);
        Ddonor.setVisible(false);
        Dpatient.setVisible(true);
        Dabout.setVisible(true);
        
        Ademand.setVisible(false);
        Adonor.setVisible(true);
        Apatient.setVisible(false);
        Aabout.setVisible(false);
        
        LoadDonorTable();
        CardLayout card = (CardLayout)PaneHome.getLayout();
        card.show(PaneHome, "card3");
    }//GEN-LAST:event_RedirectDonor

    private void RedirectPatient(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RedirectPatient
        Ddemand.setVisible(true);
        Ddonor.setVisible(true);
        Dpatient.setVisible(false);
        Dabout.setVisible(true);
        
        Ademand.setVisible(false);
        Adonor.setVisible(false);
        Apatient.setVisible(true);
        Aabout.setVisible(false);
        
        LoadPatientTable();
        CardLayout card = (CardLayout)PaneHome.getLayout();
        card.show(PaneHome, "card4");
    }//GEN-LAST:event_RedirectPatient

    private void RedirectAbout(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RedirectAbout
        Ddemand.setVisible(true);
        Ddonor.setVisible(true);
        Dpatient.setVisible(true);
        Dabout.setVisible(false);
        
        Ademand.setVisible(false);
        Adonor.setVisible(false);
        Apatient.setVisible(false);
        Aabout.setVisible(true);
        
        CardLayout card = (CardLayout)PaneHome.getLayout();
        card.show(PaneHome, "card5");
    }//GEN-LAST:event_RedirectAbout

    private void EditDonor(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditDonor
        try {
            Connection connection = DriverManager.getConnection(url, username, password);
            String sql = "SELECT Name, Age, Weight, BloodGroup, ContactNumber, Address FROM Donor WHERE ID = " + txtDonorID.getText();
            Statement statement = connection.createStatement();
            ResultSet result = statement.executeQuery(sql);
            
            while (result.next()){
                txtDonorName1.setText(result.getString(1));
                txtDonorAge1.setText(result.getString(2));
                txtDonorWeight1.setText(result.getString(3));
                txtDonorBloodGroup1.setText(result.getString(4));
                txtDonorMobile1.setText(result.getString(5));
                txtDonorAddress1.setText(result.getString(6));
            }
            
            CardLayout card = (CardLayout)PaneHome.getLayout();
            card.show(PaneHome, "card7");
        }
        
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_EditDonor

    private void NewDonor(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NewDonor
        CardLayout card = (CardLayout)PaneHome.getLayout();
        card.show(PaneHome, "card6");
    }//GEN-LAST:event_NewDonor

    private void EditPatient(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditPatient
        try {
            Connection connection = DriverManager.getConnection(url, username, password);
            String sql = "SELECT Name, Age, Weight, BloodGroup, ContactNumber, Address FROM Patient WHERE ID = " + txtPatientID.getText();
            Statement statement = connection.createStatement();
            ResultSet result = statement.executeQuery(sql);
            
            while (result.next()){
                txtPatientName1.setText(result.getString(1));
                txtPatientAge1.setText(result.getString(2));
                txtPatientWeight1.setText(result.getString(3));
                txtPatientBloodGroup1.setText(result.getString(4));
                txtPatientMobile1.setText(result.getString(5));
                txtPatientAddress1.setText(result.getString(6));
            }
            
            CardLayout card = (CardLayout)PaneHome.getLayout();
            card.show(PaneHome, "card9");
        }
        
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }        
    }//GEN-LAST:event_EditPatient

    private void NewPatient(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NewPatient
        CardLayout card = (CardLayout)PaneHome.getLayout();
        card.show(PaneHome, "card8");
    }//GEN-LAST:event_NewPatient

    private void AddDonor(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddDonor
        try {
            Class.forName(driver);
            Connection connection = DriverManager.getConnection(url, username, password);
            String sql = "INSERT INTO Donor(Name, Age, Weight, BloodGroup, ContactNumber, Address) VALUES (?, ?, ?, ?, ?, ?)";
            PreparedStatement statement = connection.prepareStatement(sql);
            statement.setString(1, txtDonorName.getText());
            statement.setString(2, txtDonorAge.getText());
            statement.setString(3, txtDonorWeight.getText());
            statement.setString(4, txtDonorBloodGroup.getText());
            statement.setString(5, txtDonorMobile.getText());
            statement.setString(6, txtDonorAddress.getText());

            int newDonor = statement.executeUpdate();
            if (newDonor > 0) {
                JOptionPane.showMessageDialog(this, "Donor details inserted successfully!");
            }            
        }
        catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
        
        CardLayout card = (CardLayout)PaneHome.getLayout();
        card.show(PaneHome, "card3");
    }//GEN-LAST:event_AddDonor

    private void UpdateDonor(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UpdateDonor
        try {
            String sql = "UPDATE Donor SET Name = ?, Age = ?, Weight = ?, BloodGroup = ?, ContactNumber = ?, Address = ? WHERE ID = " + txtDonorID.getText();
            Connection connection = DriverManager.getConnection(url, username, password);
            PreparedStatement statement = connection.prepareStatement(sql);
            statement.setString(1, txtDonorName1.getText());
            statement.setString(2, txtDonorAge1.getText());
            statement.setString(3, txtDonorWeight1.getText());
            statement.setString(4, txtDonorBloodGroup1.getText());
            statement.setString(5, txtDonorMobile1.getText());
            statement.setString(6, txtDonorAddress1.getText());
            
            int rowsUpdated = statement.executeUpdate();
            if (rowsUpdated > 0) {
                JOptionPane.showMessageDialog(this, "Donor details updated successfully!");
                LoadDonorTable();
            }
            
            CardLayout card = (CardLayout)PaneHome.getLayout();
            card.show(PaneHome, "card3");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_UpdateDonor

    private void AddPatient(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddPatient
        try {
            Class.forName(driver);
            Connection connection = DriverManager.getConnection(url, username, password);
            String sql = "INSERT INTO Patient(Name, Age, Weight, BloodGroup, ContactNumber, Address) VALUES (?, ?, ?, ?, ?, ?)";
            PreparedStatement statement = connection.prepareStatement(sql);
            statement.setString(1, txtPatientName.getText());
            statement.setString(2, txtPatientAge.getText());
            statement.setString(3, txtPatientWeight.getText());
            statement.setString(4, txtPatientBloodGroup.getText());
            statement.setString(5, txtPatientMobile.getText());
            statement.setString(6, txtPatientAddress.getText());

            int newDonor = statement.executeUpdate();
            if (newDonor > 0) {
                System.out.println("Patient details inserted successfully!");
                LoadPatientTable();
            }
        }
        catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
        
        
        CardLayout card = (CardLayout)PaneHome.getLayout();
        card.show(PaneHome, "card4");
    }//GEN-LAST:event_AddPatient

    private void UpdatePatient(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UpdatePatient
        try {
            String sql = "UPDATE Patient SET Name = ?, Age = ?, Weight = ?, BloodGroup = ?, ContactNumber = ?, Address = ? WHERE ID = " + txtPatientID.getText();
            Connection connection = DriverManager.getConnection(url, username, password);
            PreparedStatement statement = connection.prepareStatement(sql);
            statement.setString(1, txtPatientName1.getText());
            statement.setString(2, txtPatientAge1.getText());
            statement.setString(3, txtPatientWeight1.getText());
            statement.setString(4, txtPatientBloodGroup1.getText());
            statement.setString(5, txtPatientMobile1.getText());
            statement.setString(6, txtPatientAddress1.getText());
            
            int rowsUpdated = statement.executeUpdate();
            if (rowsUpdated > 0) {
                JOptionPane.showMessageDialog(this, "Patient details updated successfully!");
                LoadPatientTable();
            }
            
            CardLayout card = (CardLayout)PaneHome.getLayout();
            card.show(PaneHome, "card4");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_UpdatePatient

    private void DeletePatient(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeletePatient
        try {
            String sql = "DELETE FROM Patient WHERE ID=?";
            Connection connection = DriverManager.getConnection(url, username, password);
            PreparedStatement statement = connection.prepareStatement(sql);
            statement.setString(1, txtPatientID.getText());
            
            int rowsDeleted = statement.executeUpdate();
            if (rowsDeleted > 0) {
                LoadPatientTable();
                JOptionPane.showMessageDialog(this, "Record deleted successfully!");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_DeletePatient

    private void DeleteDonor(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeleteDonor
        try {
            String sql = "DELETE FROM Donor WHERE ID=?";
            Connection connection = DriverManager.getConnection(url, username, password);
            PreparedStatement statement = connection.prepareStatement(sql);
            statement.setString(1, txtDonorID.getText());
            
            int rowsDeleted = statement.executeUpdate();
            if (rowsDeleted > 0) {
                LoadDonorTable();
                JOptionPane.showMessageDialog(this, "Record deleted successfully!");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_DeleteDonor

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ABminusAvailable;
    private javax.swing.JLabel ABminusRequired;
    private javax.swing.JLabel ABplusAvailable;
    private javax.swing.JLabel ABplusRequired;
    private javax.swing.JLabel Aabout;
    private javax.swing.JLabel Ademand;
    private javax.swing.JLabel Adonor;
    private javax.swing.JLabel AminusAvailable;
    private javax.swing.JLabel AminusRequired;
    private javax.swing.JLabel Apatient;
    private javax.swing.JLabel AplusAvailable;
    private javax.swing.JLabel AplusRequired;
    private javax.swing.JLabel BgDemand;
    private javax.swing.JLabel BgDonorID;
    private javax.swing.JLabel BgEditDonor;
    private javax.swing.JLabel BgEditPatient;
    private javax.swing.JLabel BgMenu;
    private javax.swing.JLabel BgNewDonor;
    private javax.swing.JLabel BgNewPatient;
    private javax.swing.JLabel BgPatientID;
    private javax.swing.JLabel BminusAvailable;
    private javax.swing.JLabel BminusRequired;
    private javax.swing.JLabel BplusAvailable;
    private javax.swing.JLabel BplusRequired;
    private javax.swing.JLabel BtnCreateDonor;
    private javax.swing.JLabel BtnCreateDonorCancel;
    private javax.swing.JLabel BtnCreateDonorR;
    private javax.swing.JLabel BtnCreatePatient;
    private javax.swing.JLabel BtnCreatePatientCancel;
    private javax.swing.JLabel BtnCreatePatientR;
    private javax.swing.JLabel BtnDeleteDonor;
    private javax.swing.JLabel BtnDeletePatient;
    private javax.swing.JLabel BtnEditDonor;
    private javax.swing.JLabel BtnEditDonorCancel;
    private javax.swing.JLabel BtnEditDonorR;
    private javax.swing.JLabel BtnEditPatient;
    private javax.swing.JLabel BtnEditPatientCancel;
    private javax.swing.JLabel BtnEditPatientR;
    private javax.swing.JLabel Dabout;
    private javax.swing.JLabel Ddemand;
    private javax.swing.JLabel Ddonor;
    private javax.swing.JLabel Dpatient;
    private javax.swing.JPanel EditDonorPanel;
    private javax.swing.JPanel EditPatientPanel;
    private javax.swing.JPanel NewDonorPanel;
    private javax.swing.JPanel NewPatientPanel;
    private javax.swing.JLabel OminusAvailable;
    private javax.swing.JLabel OminusRequired;
    private javax.swing.JLabel OplusAvailable;
    private javax.swing.JLabel OplusRequired;
    private javax.swing.JPanel PaneHome;
    private javax.swing.JPanel PaneMenu;
    private javax.swing.JPanel PanelAbout;
    private javax.swing.JPanel PanelDemand;
    private javax.swing.JPanel PanelDonor;
    private javax.swing.JPanel PanelPatient;
    private javax.swing.JSplitPane SplitPane;
    private javax.swing.JTable TableDonor;
    private javax.swing.JTable TablePatient;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txtDonorAddress;
    private javax.swing.JTextField txtDonorAddress1;
    private javax.swing.JTextField txtDonorAge;
    private javax.swing.JTextField txtDonorAge1;
    private javax.swing.JTextField txtDonorBloodGroup;
    private javax.swing.JTextField txtDonorBloodGroup1;
    private javax.swing.JTextField txtDonorID;
    private javax.swing.JTextField txtDonorMobile;
    private javax.swing.JTextField txtDonorMobile1;
    private javax.swing.JTextField txtDonorName;
    private javax.swing.JTextField txtDonorName1;
    private javax.swing.JTextField txtDonorWeight;
    private javax.swing.JTextField txtDonorWeight1;
    private javax.swing.JTextField txtPatientAddress;
    private javax.swing.JTextField txtPatientAddress1;
    private javax.swing.JTextField txtPatientAge;
    private javax.swing.JTextField txtPatientAge1;
    private javax.swing.JTextField txtPatientBloodGroup;
    private javax.swing.JTextField txtPatientBloodGroup1;
    private javax.swing.JTextField txtPatientID;
    private javax.swing.JTextField txtPatientMobile;
    private javax.swing.JTextField txtPatientMobile1;
    private javax.swing.JTextField txtPatientName;
    private javax.swing.JTextField txtPatientName1;
    private javax.swing.JTextField txtPatientWeight;
    private javax.swing.JTextField txtPatientWeight1;
    // End of variables declaration//GEN-END:variables
}
